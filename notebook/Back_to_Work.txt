Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2025-09-03T13:55:30+00:00

====== Back to Work ======
Created Wednesday 03 September 2025

===== Problems Found =====
* USB connection to Raspberry Pi not working properly
* Had to add KironWifi as backup connection for comfortable work
* USB interface configured but Pi not responding on 192.168.7.2

===== Solutions Implemented =====
==== Added KironWifi Connection ====
{{{code: lang="sh" linenumbers="True"
# Add KironWifi connection to Raspberry Pi
sudo nmcli con add type wifi ifname wlan0 con-name "KironWifi" ssid "KironWifi"
sudo nmcli con modify "KironWifi" wifi-sec.key-mgmt wpa-psk wifi-sec.psk "36900000"
sudo nmcli con modify "KironWifi" ipv4.addresses "10.247.104.100/24"
sudo nmcli con modify "KironWifi" ipv4.gateway "10.247.104.34"
sudo nmcli con modify "KironWifi" ipv4.dns "10.247.104.34,8.8.8.8"
sudo nmcli con modify "KironWifi" ipv4.method manual
sudo nmcli con modify "KironWifi" connection.autoconnect yes
}}}

==== Connection Priority Setup ====
{{{code: lang="sh" linenumbers="True"
# Set connection priorities
sudo nmcli con modify "KironWifi" connection.autoconnect-priority 100
sudo nmcli con modify "iotrac" connection.autoconnect-priority 50
sudo nmcli con modify "internet" connection.autoconnect-priority 30
}}}

===== Updated SSH Configuration =====
==== SSH Config File ====
{{{code: lang="sh" linenumbers="True"
# Raspberry Pi KironWifi connection (FIRST PRIORITY)
Host raspi-kiron
    Hostname 10.247.104.100
    User pi
    IdentityFile ~/.ssh/id_rsa

# Raspberry Pi iotrac connection
Host raspi
    Hostname 192.168.0.2
    User pi
    IdentityFile ~/.ssh/id_rsa

# Raspberry Pi internet connection
Host raspi_internet
    Hostname 192.168.1.48
    User pi
    IdentityFile ~/.ssh/id_rsa

# Raspberry Pi USB connection
Host raspi_usb
    Hostname 192.168.7.2
    User pi
    IdentityFile ~/.ssh/id_rsa
}}}

==== Connection Priority Order ====
1. **KironWifi** (10.247.104.100) - With internet
2. **iotrac** (192.168.0.2) - No internet
3. **internet** (192.168.1.48) - Secondary WiFi
4. **usb** (192.168.7.2) - Direct connection

===== Raspberry Pi Shutdown Command =====
{{{code: lang="sh" linenumbers="True"
sudo shutdown -h now
}}}

===== Current Status =====
* KironWifi connection successfully configured
* SSH access working via raspi-kiron
* Ready to continue development work
* USB connection issue to be investigated later

===== New Problem Found =====
* GND connection issue: Multiple components need common ground reference
* Raspberry Pi has limited GND pins but needs to connect to L298N, LCD, Servo, Camera, and HC-SR04 sensor
* Components have separate power sources (Raspberry Pi with AA batteries, other components with powerbank)

===== Solution Implemented =====
* Connect single GND from Raspberry Pi to USB cable cut point
* All powerbank-powered components (L298N, LCD, Servo, Camera) share this common GND
* HC-SR04 sensor connects directly to Raspberry Pi GND (powered by AA batteries)
* Result: Only 2 GND connections from Raspberry Pi instead of multiple individual connections

===== GND Connection Diagram =====
{{{code: lang="text" linenumbers="True"
Raspberry Pi GND → USB cable GND point
                    ├── L298N GND
                    ├── LCD GND  
                    ├── Servo GND
                    └── Camera GND

Raspberry Pi GND → HC-SR04 GND (direct connection)
}}}

===== Current Status =====
* Blinky code tested successfully
* GND connection strategy defined
* Ready to implement motor connections

===== Start of L298N Controller Connection =====
==== Pin Connections =====
* VCC: 5V power supply
* GND: Ground
* ENA: Enable pin for Motor A (PWM control)
* IN1, IN2: Control pins for Motor A direction
* IN3, IN4: Control pins for Motor B direction
* ENB: Enable pin for Motor B (PWM control)
* OUT1, OUT2: Motor A connections
* OUT3, OUT4: Motor B connections

==== Physical Pin Connections =====
{{{code: lang="text" linenumbers="True"
L298N Controlador    →    Raspberry Pi Physical Pin
├── IN1              →    GPIO 17 (Pin 11)
├── IN2              →    GPIO 27 (Pin 13)
├── IN3              →    GPIO 22 (Pin 15)
├── IN4              →    GPIO 23 (Pin 16)
├── ENA              →    GPIO 18 (Pin 12)
├── ENB              →    GPIO 10 (Pin 19)
└── GND              →    GND (Pin 6, 9, 14, 20, 25, 30, 34, 39)
}}}

===== Motor Test Ready =====
* Powerbank: 4.99V confirmed working
* Controller LED: ON (system active)
* All connections mapped and documented
* Motor test code created in src/motor_test.py
* Ready for first real motor test

===== Motor Test Problem Found =====
* Problem: Motors not responding when executing motor_test.py
* Symptoms: No movement despite correct connections and power
* Controller LED: ON (power working)
* GPIO pins: Responding correctly to commands
* Power supply: 5V confirmed with multimeter

===== Possible Causes =====
* Jumper cables cut and reconnected may have connection issues
* Soldered connections may have intermittent contact
* High resistance in cut cable connections
* Loose connections in female-female adapters

===== Next Steps =====
* Manual testing of physical connections
* Verify continuity of cut jumper cables
* Test with multimeter to check voltage at L298N input pins
* Consider using new uncut jumper cables for testing

===== Connection Test Code Created =====
{{{code: lang="python" linenumbers="True"
#!/usr/bin/env python3
import RPi.GPIO as GPIO
import time

# Pin definitions
ENA = 18
IN1 = 17
IN2 = 27
IN3 = 22
IN4 = 23
ENB = 10

GPIO.setmode(GPIO.BCM)
GPIO.setwarnings(False)
GPIO.setup([ENA, IN1, IN2, IN3, IN4, ENB], GPIO.OUT)

print("Testing individual pins...")

# Test IN1
print("Testing IN1 (GPIO 17)...")
GPIO.output(IN1, GPIO.HIGH)
time.sleep(2)
GPIO.output(IN1, GPIO.LOW)

# Test IN2
print("Testing IN2 (GPIO 27)...")
GPIO.output(IN2, GPIO.HIGH)
time.sleep(2)
GPIO.output(IN2, GPIO.LOW)

# Test IN3
print("Testing IN3 (GPIO 22)...")
GPIO.output(IN3, GPIO.HIGH)
time.sleep(2)
GPIO.output(IN3, GPIO.LOW)

# Test IN4
print("Testing IN4 (GPIO 23)...")
GPIO.output(IN4, GPIO.HIGH)
time.sleep(2)
GPIO.output(IN4, GPIO.LOW)

GPIO.cleanup()
print("Test completed.")
}}}

===== Current Status =====
* Motor test code executed successfully (no GPIO errors)
* Physical connections verified with multimeter
* Problem identified: Likely issue with cut jumper cables
* Ready for manual connection testing tomorrow
* Connection test code ready for troubleshooting
